{"version":3,"file":"static/js/93.748cc778.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","components/AddContactModal/AddContactModal.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx","store/contacts/selectors.js"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'store/contacts/operations';\nimport { selectContacts } from 'store/contacts/selectors';\nimport {\n  Button,\n  Center,\n  FormControl,\n  FormLabel,\n  Input,\n} from '@chakra-ui/react';\n\nconst ContactForm = ({ close }) => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const handleInput = ev => {\n    if (ev.target.name === 'name') {\n      setName(ev.target.value);\n      return;\n    }\n    if (ev.target.name === 'phone') {\n      setPhone(ev.target.value);\n      return;\n    }\n  };\n  const handleSubmit = ev => {\n    ev.preventDefault();\n    const newContact = {\n      name,\n      number:phone,\n    };\n    if (\n      contacts.find(\n        el => el.name.toLowerCase() === newContact.name.toLocaleLowerCase()\n      )\n    ) {\n      alert(` ${newContact.name} is already in contacts`);\n      return;\n    }\n    dispatch(addContact(newContact));\n    close();\n    ev.target.reset();\n  };\n  return (\n    <form\n      style={{\n        maxWidth: '650px',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n      }}\n      onSubmit={handleSubmit}\n    >\n      <FormControl isRequired=\"true\">\n        <FormLabel>Name</FormLabel>\n        <Input required name=\"name\" type=\"text\" onInput={handleInput} />\n      </FormControl>\n      <FormControl isRequired=\"true\">\n        <FormLabel>Phone number</FormLabel>\n        <Input required name=\"phone\" type=\"phone\" onInput={handleInput} />\n      </FormControl>\n      <Center>\n        <Button colorScheme=\"blue\" mt={5} type=\"submit\">\n          Add contact\n        </Button>\n      </Center>\n    </form>\n  );\n};\nexport default ContactForm;\n","import { AddIcon } from '@chakra-ui/icons';\n\nconst {\n  Button,\n  useDisclosure,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalCloseButton,\n  Modal,\n  ModalBody,\n  Box,\n} = require('@chakra-ui/react');\nconst { default: ContactForm } = require('components/ContactForm/ContactForm');\n\nexport function AddContactModal() {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  return (\n    <Box mt={15}>\n      <Button\n        display=\"block\"\n        ml=\"auto\"\n        leftIcon={<AddIcon />}\n        colorScheme=\"blue\"\n        \n        onClick={onOpen}\n      >\n        Add Contact\n      </Button>\n\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Add Contact</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <ContactForm close={onClose} />\n          </ModalBody>\n        </ModalContent>\n      </Modal>\n    </Box>\n  );\n}\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'store/contacts/operations';\nimport { Button, Td, Tr } from '@chakra-ui/react';\nimport { DeleteIcon } from '@chakra-ui/icons';\nconst ContactsItem = ({ contact }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => {\n    dispatch(deleteContact(contact.id));\n  };\n  return (\n    <Tr>\n      <Td>{contact.name}</Td>\n      <Td>{contact.number}</Td>\n      <Td textAlign=\"right\">\n        <Button colorScheme=\"red\"  onClick={handleDelete}>\n          <DeleteIcon color=\"inherit\" />\n        </Button>\n      </Td>\n    </Tr>\n  );\n};\nexport default ContactsItem;\n","import ContactsItem from 'components/ContactItem/ContactItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'store/contacts/selectors';\nimport { fetchContacts } from 'store/contacts/operations';\nimport { useEffect } from 'react';\nimport {\n  Container,\n  Table,\n  TableContainer,\n  Tbody,\n  Th,\n  Thead,\n  Tr,\n} from '@chakra-ui/react';\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  const filterValue = useSelector(selectFilter);\n  const createRenderListContact = () => {\n    return contacts.filter(el => {\n      return el.name.toLowerCase().includes(filterValue.toLowerCase());\n    });\n  };\n  return (\n    <Container maxW=\"1000\">\n      <TableContainer>\n        <Table>\n          <Thead>\n            <Tr bg=\"#c0d4e0\">\n              <Th>Name</Th>\n              <Th>number</Th>\n              <Th textAlign=\"right\">options</Th>\n            </Tr>\n          </Thead>\n          <Tbody>\n            {createRenderListContact().map(el => {\n              return <ContactsItem key={el.id} contact={el} />;\n            })}\n          </Tbody>\n        </Table>\n      </TableContainer>\n    </Container>\n  );\n};\nexport default ContactList;\n","import { filterUse } from 'store/contacts/filterSlice';\nimport { useDispatch } from 'react-redux';\nimport { Container, FormControl, FormLabel, Input } from '@chakra-ui/react';\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const handleInput = ev => {\n    const text = ev.target.value;\n    dispatch(filterUse(text));\n  };\n  return (\n    <Container mb={15}>\n      <FormControl alignItems=\"center\">\n        <FormLabel>Find Your contacts by name</FormLabel>\n        <Input\n          placeholder=\"search\"\n          type=\"text\"\n          name=\"filter\"\n          onChange={handleInput}\n        />\n      </FormControl>\n    </Container>\n  );\n};\n\nexport default Filter;\n","import { Container } from '@chakra-ui/react';\nimport { AddContactModal } from 'components/AddContactModal/AddContactModal';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport Loader from 'components/Loader/Loader';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoading } from 'store/contacts/selectors';\n\nexport const Contacts = () => {\n  const isLoading = useSelector(selectIsLoading);\n  return (\n    <>\n      <Container maxW=\"1000px\">\n        <AddContactModal />\n      </Container>\n      <h2\n        style={{\n          fontSize: '40px',\n          marginBottom: '10px',\n          textAlign: 'center',\n        }}\n      >\n        Contacts\n      </h2>\n      <Filter />\n      {isLoading && <Loader />}\n      <ContactList />\n    </>\n  );\n};\n\nexport default Contacts;\n","export const selectContacts = state => state.contacts.items;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectFilter = state => state.filter;\n"],"names":["_ref","close","name","setName","useState","phone","setPhone","contacts","useSelector","selectContacts","dispatch","useDispatch","handleInput","ev","target","value","_jsxs","style","maxWidth","marginLeft","marginRight","onSubmit","preventDefault","newContact","number","find","el","toLowerCase","toLocaleLowerCase","alert","concat","addContact","reset","children","FormControl","isRequired","_jsx","FormLabel","Input","required","type","onInput","Center","Button","colorScheme","mt","useDisclosure","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","Modal","ModalBody","Box","require","default","ContactForm","AddContactModal","isOpen","onOpen","onClose","display","ml","leftIcon","AddIcon","onClick","contact","Tr","Td","textAlign","handleDelete","deleteContact","id","DeleteIcon","color","ContactList","useEffect","fetchContacts","filterValue","selectFilter","Container","maxW","TableContainer","Table","Thead","bg","Th","Tbody","filter","includes","map","ContactsItem","Filter","mb","alignItems","placeholder","onChange","text","filterUse","Contacts","isLoading","selectIsLoading","_Fragment","fontSize","marginBottom","Loader","state","items"],"sourceRoot":""}