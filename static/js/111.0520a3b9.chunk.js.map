{"version":3,"file":"static/js/111.0520a3b9.chunk.js","mappings":"uVAoBO,MAAMA,EAAYA,KACvB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,IACnCG,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,KAItBC,EAAMC,IAAWX,EAAAA,EAAAA,WAAS,GAE3BY,EAAcC,IAClB,OAAQA,EAAGC,OAAOC,MAChB,IAAK,QACHhB,EAASc,EAAGC,OAAOE,OACnB,MAEF,IAAK,WACHd,EAAYW,EAAGC,OAAOE,OAK1B,EAUF,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACC,GAAI,GAAGC,UAChBH,EAAAA,EAAAA,KAAA,QAAMI,SAVWR,IACnBA,EAAGS,iBACH,MAAMC,EAAO,CACXzB,QACAG,YAEFI,GAASmB,EAAAA,EAAAA,IAAMD,GAAM,EAIUH,UAC3BK,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CACFC,QAAQ,OACRC,SAAU,IACVC,OAAO,sBACPC,aAAa,KAAIV,SAAA,EAEjBH,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CAACC,SAAS,MAAMC,WAAY,IAAIb,SAAC,WAGtCK,EAAAA,EAAAA,MAACS,EAAAA,GAAW,CAACC,YAAU,EAAAf,SAAA,EACrBH,EAAAA,EAAAA,KAACmB,EAAAA,EAAS,CAACJ,SAAU,GAAGZ,SAAC,gBACzBH,EAAAA,EAAAA,KAACoB,EAAAA,EAAK,CAACC,QAAS1B,EAAaG,KAAK,QAAQwB,KAAK,WAC/CtB,EAAAA,EAAAA,KAACuB,EAAAA,GAAc,CAAApB,SAAC,sCAElBK,EAAAA,EAAAA,MAACS,EAAAA,GAAW,CAACO,GAAI,GAAIN,YAAU,EAAAf,SAAA,EAC7BH,EAAAA,EAAAA,KAACmB,EAAAA,EAAS,CAACJ,SAAU,GAAGZ,SAAC,mBACzBK,EAAAA,EAAAA,MAACiB,EAAAA,EAAU,CAACC,KAAK,KAAIvB,SAAA,EACnBH,EAAAA,EAAAA,KAACoB,EAAAA,EAAK,CACJO,UAAW,EACX7B,KAAK,WACLuB,QAAS1B,EACTiC,GAAG,SACHN,KAAM7B,EAAO,OAAS,WACtBoC,YAAY,oBAEd7B,EAAAA,EAAAA,KAAC8B,EAAAA,EAAiB,CAACC,MAAM,SAAQ5B,UAC/BH,EAAAA,EAAAA,KAACgC,EAAAA,EAAM,CAACC,EAAE,UAAUP,KAAK,KAAKQ,QApDzBC,IAAMzC,GAASD,GAoD8BU,SAC/CV,EAAO,OAAS,kBAKzBe,EAAAA,EAAAA,MAAC4B,EAAAA,EAAW,CAACC,IAAK,GAAGlC,SAAA,EACnBH,EAAAA,EAAAA,KAACgC,EAAAA,EAAM,CAACD,MAAO,GAAIT,KAAK,SAASgB,YAAY,QAAOnC,SACjDb,GAAWU,EAAAA,EAAAA,KAACuC,EAAAA,EAAO,IAAM,WAE5BvC,EAAAA,EAAAA,KAACgC,EAAAA,EAAM,CAACV,KAAK,SAASgB,YAAY,OAAOJ,QAlE5BM,KACrBtD,EAAS,IAAK,CAAEuD,SAAS,GAAO,EAiEyCtC,SAAC,kBAM9D,EChGHuC,EAAQA,KAEjB1C,EAAAA,EAAAA,KAACpB,EAAS,IAId,G","sources":["components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import {\n  Box,\n  Button,\n  ButtonGroup,\n  Container,\n  FormControl,\n  FormHelperText,\n  FormLabel,\n  Input,\n  InputGroup,\n  InputRightElement,\n  Spinner,\n  Text,\n} from '@chakra-ui/react';\nimport { useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport { logIn } from 'store/auth/operations';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { selectFetching } from 'store/auth/selectors';\nexport const LoginForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const fetching = useSelector(selectFetching);\n  const handleNavigate = () => {\n    navigate('/', { replace: true });\n  };\n  const [show, setShow] = useState(false);\n  const handleShow = () => setShow(!show);\n  const handleInput = ev => {\n    switch (ev.target.name) {\n      case 'email':\n        setEmail(ev.target.value);\n        break;\n\n      case 'password':\n        setPassword(ev.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n  const handleSubmit = ev => {\n    ev.preventDefault();\n    const user = {\n      email,\n      password,\n    };\n    dispatch(logIn(user));\n  };\n  return (\n    <Container pt={30}>\n      <form onSubmit={handleSubmit}>\n        <Box\n          padding=\"15px\"\n          maxWidth={500}\n          border=\"2px solid #3b3b3b4e\"\n          borderRadius=\"12\"\n        >\n          <Text fontSize=\"3xl\" fontWeight={500}>\n            Login\n          </Text>\n          <FormControl isRequired>\n            <FormLabel fontSize={24}>Your email</FormLabel>\n            <Input onInput={handleInput} name=\"email\" type=\"email\" />\n            <FormHelperText>We'll never share your email.</FormHelperText>\n          </FormControl>\n          <FormControl mb={15} isRequired>\n            <FormLabel fontSize={24}>Your password</FormLabel>\n            <InputGroup size=\"md\">\n              <Input\n                minLength={8}\n                name=\"password\"\n                onInput={handleInput}\n                pr=\"4.5rem\"\n                type={show ? 'text' : 'password'}\n                placeholder=\"Enter password\"\n              />\n              <InputRightElement width=\"4.5rem\">\n                <Button h=\"1.75rem\" size=\"sm\" onClick={handleShow}>\n                  {show ? 'Hide' : 'Show'}\n                </Button>\n              </InputRightElement>\n            </InputGroup>\n          </FormControl>\n          <ButtonGroup gap={15}>\n            <Button width={73} type=\"submit\" colorScheme=\"green\">\n              {fetching ? <Spinner /> : 'Login'}\n            </Button>\n            <Button type=\"button\" colorScheme=\"blue\" onClick={handleNavigate}>\n              Back\n            </Button>\n          </ButtonGroup>\n        </Box>\n      </form>\n    </Container>\n  );\n};\n","import { LoginForm } from \"components/LoginForm/LoginForm\"\n\nexport const Login = () => {\n  return (\n    <LoginForm/>\n  )\n}\n\nexport default Login\n"],"names":["LoginForm","email","setEmail","useState","password","setPassword","navigate","useNavigate","dispatch","useDispatch","fetching","useSelector","selectFetching","show","setShow","handleInput","ev","target","name","value","_jsx","Container","pt","children","onSubmit","preventDefault","user","logIn","_jsxs","Box","padding","maxWidth","border","borderRadius","Text","fontSize","fontWeight","FormControl","isRequired","FormLabel","Input","onInput","type","FormHelperText","mb","InputGroup","size","minLength","pr","placeholder","InputRightElement","width","Button","h","onClick","handleShow","ButtonGroup","gap","colorScheme","Spinner","handleNavigate","replace","Login"],"sourceRoot":""}