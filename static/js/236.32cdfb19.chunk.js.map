{"version":3,"file":"static/js/236.32cdfb19.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import {\n  Box,\n  Button,\n  ButtonGroup,\n  Container,\n  FormControl,\n  FormHelperText,\n  FormLabel,\n  Input,\n  InputGroup,\n  InputRightElement,\n  Spinner,\n  Text,\n} from '@chakra-ui/react';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'store/auth/operations';\nimport { useSelector } from 'react-redux';\nimport { selectFetching } from 'store/auth/selectors';\nexport const RegisterForm = () => {\n  const fetching = useSelector(selectFetching);\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const navigate = useNavigate();\n  const handleNavigate = () => {\n    navigate('/', { replace: true });\n  };\n  const [show, setShow] = useState(false);\n  const handleShow = () => setShow(!show);\n  const handleInput = ev => {\n    const { name } = ev.target;\n    switch (name) {\n      case 'name':\n        setName(ev.target.value);\n        break;\n      case 'email':\n        setEmail(ev.target.value);\n        break;\n      case 'password':\n        setPassword(ev.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n  const handleSubmit = ev => {\n    ev.preventDefault();\n    console.log(ev);\n    const user = { name, email, password };\n    dispatch(register(user));\n    ev.target.reset();\n  };\n\n  return (\n    <Container pt={30}>\n      <form onSubmit={handleSubmit}>\n        <Box\n          padding=\"15px\"\n          maxWidth={500}\n          border=\"2px solid #3b3b3b4e\"\n          borderRadius=\"12\"\n        >\n          <Text fontSize=\"3xl\" fontWeight={500}>\n            Create account\n          </Text>\n          <FormControl isRequired>\n            <FormLabel fontSize={24}>Your name</FormLabel>\n            <Input\n              placeholder=\"Adrian Cross\"\n              type=\"text\"\n              name=\"name\"\n              onInput={handleInput}\n            />\n          </FormControl>\n          <FormControl isRequired>\n            <FormLabel fontSize={24}>Your email</FormLabel>\n            <Input\n              placeholder=\"across@mail.com\"\n              type=\"email\"\n              name=\"email\"\n              onInput={handleInput}\n            />\n            <FormHelperText>We'll never share your email.</FormHelperText>\n          </FormControl>\n          <FormControl mb={15} isRequired>\n            <FormLabel fontSize={24}>Your password</FormLabel>\n            <InputGroup size=\"md\">\n              <Input\n                minLength={8}\n                name=\"password\"\n                onInput={handleInput}\n                pr=\"4.5rem\"\n                type={show ? 'text' : 'password'}\n                placeholder=\"Enter password\"\n              />\n              <InputRightElement width=\"4.5rem\">\n                <Button h=\"1.75rem\" size=\"sm\" onClick={handleShow}>\n                  {show ? 'Hide' : 'Show'}\n                </Button>\n              </InputRightElement>\n            </InputGroup>\n          </FormControl>\n          <ButtonGroup gap={15}>\n            <Button width={91} colorScheme=\"green\" type=\"submit\">\n              {fetching ? <Spinner /> : 'Register'}\n            </Button>\n            <Button colorScheme=\"blue\" type=\"button\" onClick={handleNavigate}>\n              Back\n            </Button>\n          </ButtonGroup>\n        </Box>\n      </form>\n    </Container>\n  );\n};\n","import { RegisterForm } from \"components/RegisterForm/RegisterForm\"\n\nexport const Register = () => {\n  return (\n    <RegisterForm/>\n  )\n}\n\nexport default Register\n"],"names":["RegisterForm","fetching","useSelector","selectFetching","dispatch","useDispatch","name","setName","useState","password","setPassword","email","setEmail","navigate","useNavigate","show","setShow","handleInput","ev","target","value","_jsx","Container","pt","children","onSubmit","preventDefault","console","log","user","register","reset","_jsxs","Box","padding","maxWidth","border","borderRadius","Text","fontSize","fontWeight","FormControl","isRequired","FormLabel","Input","placeholder","type","onInput","FormHelperText","mb","InputGroup","size","minLength","pr","InputRightElement","width","Button","h","onClick","handleShow","ButtonGroup","gap","colorScheme","Spinner","handleNavigate","replace","Register"],"sourceRoot":""}